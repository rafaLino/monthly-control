/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as MainImport } from './routes/_main'
import { Route as MainIndexImport } from './routes/_main/index'

// Create Virtual Routes

const MainSettingsLazyImport = createFileRoute('/_main/settings')()
const MainAnalyticsLazyImport = createFileRoute('/_main/analytics')()
const MainAboutLazyImport = createFileRoute('/_main/about')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const MainSettingsLazyRoute = MainSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/settings.lazy').then((d) => d.Route),
)

const MainAnalyticsLazyRoute = MainAnalyticsLazyImport.update({
  path: '/analytics',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/analytics.lazy').then((d) => d.Route),
)

const MainAboutLazyRoute = MainAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main/about.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_main/about': {
      id: '/_main/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MainAboutLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/analytics': {
      id: '/_main/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof MainAnalyticsLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/settings': {
      id: '/_main/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainSettingsLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  MainRoute: MainRoute.addChildren({
    MainAboutLazyRoute,
    MainAnalyticsLazyRoute,
    MainSettingsLazyRoute,
    MainIndexRoute,
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main",
        "/login"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/about",
        "/_main/analytics",
        "/_main/settings",
        "/_main/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_main/about": {
      "filePath": "_main/about.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/analytics": {
      "filePath": "_main/analytics.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/settings": {
      "filePath": "_main/settings.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
